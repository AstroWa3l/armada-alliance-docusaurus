"use strict";(self.webpackChunkarmada_alliance_docusaurus=self.webpackChunkarmada_alliance_docusaurus||[]).push([[4751],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,g=m["".concat(s,".").concat(u)]||m[u]||d[u]||o;return a?n.createElement(g,i(i({ref:t},c),{},{components:a})):n.createElement(g,i({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5319:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],l={description:"Pi-Node to Pi-Relay"},s="Pi-Relay",p={unversionedId:"stake-pool-guides/pi-pool-tutorial/pi-relay",id:"stake-pool-guides/pi-pool-tutorial/pi-relay",title:"Pi-Relay",description:"Pi-Node to Pi-Relay",source:"@site/docs/stake-pool-guides/pi-pool-tutorial/pi-relay.md",sourceDirName:"stake-pool-guides/pi-pool-tutorial",slug:"/stake-pool-guides/pi-pool-tutorial/pi-relay",permalink:"/armada-alliance-docusaurus/docs/stake-pool-guides/pi-pool-tutorial/pi-relay",editUrl:"https://github.com/rekuenkdr/armada-alliance-docusaurus/edit/master/docs/stake-pool-guides/pi-pool-tutorial/pi-relay.md",tags:[],version:"current",frontMatter:{description:"Pi-Node to Pi-Relay"},sidebar:"tutorialSidebar",previous:{title:"Pi-Node (Quick Start)",permalink:"/armada-alliance-docusaurus/docs/stake-pool-guides/pi-pool-tutorial/pi-node"},next:{title:"Pi-Core",permalink:"/armada-alliance-docusaurus/docs/stake-pool-guides/pi-pool-tutorial/core-online"}},c={},d=[{value:"Hostname",id:"hostname",level:2},{value:"Network",id:"network",level:2},{value:"Static IP",id:"static-ip",level:3},{value:"Configure service port",id:"configure-service-port",level:2},{value:"Forward port on router",id:"forward-port-on-router",level:2},{value:"Topology Updater",id:"topology-updater",level:2},{value:"Prune the list",id:"prune-the-list",level:3},{value:"Enable blockfetch tracing",id:"enable-blockfetch-tracing",level:3},{value:"Prometheus",id:"prometheus",level:2}],m={toc:d};function u(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pi-relay"},"Pi-Relay"),(0,o.kt)("p",null,"To turn Pi-Node into a active relay we have to."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Configure hostname."),(0,o.kt)("li",{parentName:"ol"},"Configure static IP."),(0,o.kt)("li",{parentName:"ol"},"Configure port for cardano-service."),(0,o.kt)("li",{parentName:"ol"},"Configure port forwarding on router."),(0,o.kt)("li",{parentName:"ol"},"Enable cron job."),(0,o.kt)("li",{parentName:"ol"},"Wait for service on boarding(4 hours)."),(0,o.kt)("li",{parentName:"ol"},"Prune list of best (8) peers."),(0,o.kt)("li",{parentName:"ol"},"Edit the alias name for Prometheus."),(0,o.kt)("li",{parentName:"ol"},"Reboot.")),(0,o.kt)("h2",{id:"hostname"},"Hostname"),(0,o.kt)("p",null,"To set a fully qualified domain name (FQDN) for our relay edit /etc/hostname & /etc/hosts."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo nano /etc/hostname\n")),(0,o.kt)("p",null,"Replace ubuntu with your desired FQDN."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"r1.example.com\n")),(0,o.kt)("p",null,"Save and exit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo nano /etc/hosts\n")),(0,o.kt)("p",null,"Edit the file accordingly, take note that you may not be using the 192.168.1.xxx IP range."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"127.0.0.1 localhost\n127.0.1.1 r1.example.com r1\n\n# The following lines are desirable for IPv6 capable hosts\n::1 ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\nff02::3 ip6-allhosts\n\n")),(0,o.kt)("p",null,"Save and exit."),(0,o.kt)("h2",{id:"network"},"Network"),(0,o.kt)("h3",{id:"static-ip"},"Static IP"),(0,o.kt)("p",null,"Open ",(0,o.kt)("strong",{parentName:"p"},"50-cloud-init.yaml")," and replace the contents of the file with below."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://netplan.io/examples/"},"netplan configuration")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Be sure to use an address on your LAN subnet. In this example I am using ",(0,o.kt)("strong",{parentName:"p"},"192.168.1.xxx"),". Your network may very well be using a different private range."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"sudo nano /etc/netplan/50-cloud-init.yaml\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# This file is generated from information provided by the datasource.  Changes\n# to it will not persist across an instance reboot.  To disable cloud-init's\n# network configuration capabilities, write a file\n# /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:\n# network: {config: disabled}\nnetwork:\n  version: 2\n  renderer: networkd\n  ethernets:\n    eth0:\n      dhcp4: no\n      addresses:\n        - 192.168.1.151/24\n      gateway4: 192.168.1.1\n      nameservers:\n# Home router IP & QUAD9 https://quad9.net/\n          addresses: [192.168.1.1, 9.9.9.9, 149.112.112.112]\n\n")),(0,o.kt)("p",null,"Create a file named ",(0,o.kt)("strong",{parentName:"p"},"99-disable-network-config.cfg")," to disable cloud-init."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"sudo nano /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg\n")),(0,o.kt)("p",null,"Add the following, save and exit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"network: {config: disabled}\n")),(0,o.kt)("p",null,"Apply your changes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo netplan apply\n")),(0,o.kt)("h2",{id:"configure-service-port"},"Configure service port"),(0,o.kt)("p",null,"Open the ~/.adaenv file and change the port it listens on. For R1 or my first relay I will designate port 3001."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"nano $HOME/.adaenv\n")),(0,o.kt)("p",null,"Save and exit. ",(0,o.kt)("strong",{parentName:"p"},"ctrl+x then y"),"."),(0,o.kt)("p",null,"Enable cardano-service at boot & restart the service to load changes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"cardano-service enable\ncardano-service restart\n")),(0,o.kt)("h2",{id:"forward-port-on-router"},"Forward port on router"),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Do not forward a port to your Core machine it only connects to your relay(s) on your LAN"))),(0,o.kt)("p",null,"Log into your router and forward port 3001 to your relay nodes LAN IPv4 address port 3001. Second relay forward port 3002 to LAN IPv4 address for relay 2 to port 3002."),(0,o.kt)("h2",{id:"topology-updater"},"Topology Updater"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"cd $NODE_HOME/scripts\n")),(0,o.kt)("p",null,"Configure the script to match your environment."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},'If you are using IPv4 leave CNODE_HOSTNAME the way it is. The service will pick up your public IP address on it\'s own. I repeat only change the port to 3001. For DNS change only the first instance. Do not edit "CHANGE ME" further down in the file.'))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"cd ${NODE_HOME}/scripts/\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"nano topologyUpdater.sh\n")),(0,o.kt)("p",null,"Run the updater once to confirm it is working."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"./topologyUpdater.sh\n")),(0,o.kt)("p",null,"Should look similar to this."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},'{ "resultcode": "201", "datetime":"2021-05-20 10:13:40", "clientIp": "1.2.3.4", "iptype": 4, "msg": "nice to meet you" }'))),(0,o.kt)("p",null,"Enable the cron job by removing the # character from crontab."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"crontab -e\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"33 * * * * /home/ada/pi-pool/scripts/topologyUpdater.sh\n")),(0,o.kt)("p",null,"Save and exit."),(0,o.kt)("p",null,"After four hours of on boarding your relay(s) will start to be available to other peers on the network. ",(0,o.kt)("strong",{parentName:"p"},"topologyUpdater.sh")," will create a list in ${NODE_HOME}/logs."),(0,o.kt)("h3",{id:"prune-the-list"},"Prune the list"),(0,o.kt)("p",null,"Open your topolgy file and use ",(0,o.kt)("strong",{parentName:"p"},"ctrl+k")," to cut the entire line of any peer over 5,000 miles away."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Remember to remove the last entries comma in your list or cardano-node will fail to start."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"nano ${NODE_HOME}/files/${NODE_CONFIG}-topology.json\n")),(0,o.kt)("h3",{id:"enable-blockfetch-tracing"},"Enable blockfetch tracing"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},'sed -i ${NODE_FILES}/mainnet-config.json \\\n    -e "s/TraceBlockFetchDecisions\\": false/TraceBlockFetchDecisions\\": true/g"\n')),(0,o.kt)("p",null,"Reboot your new relay and let it sync back to the tip of the chain."),(0,o.kt)("p",null,"Use gLiveView.sh to view peer info."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"cd /home/ada/pi-pool/scripts\n./gLiveView.sh\n")),(0,o.kt)("p",null,"Many operators block icmp syn packets(ping) because of a security flaw that was patched a decade ago. So expect to see --- for RTT because we are not receiving a response from that server."),(0,o.kt)("p",null,"More incoming connections is generally a good thing, it increases the odds that you will get network data sooner. Though you may want to put a limit on how many connect. The only way to stop incoming connections would be to block the IPv4 address with ufw."),(0,o.kt)("h2",{id:"prometheus"},"Prometheus"),(0,o.kt)("p",null,"Last thing we can do is change the alias name Prometheus is serving to Grafana. You will have to go into Grafana and edit the panels alias accordingly as well."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"sudo nano /etc/prometheus/prometheus.yml\n")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"You can change."),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"alias: 'N1'\n")),(0,o.kt)("p",{parentName:"div"},"to"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"alias: 'R1'\n")),(0,o.kt)("p",{parentName:"div"},"In an upcoming guide I will show how to have Prometheus running on a separate Pi scraping data from the pool instead of having Prometheus using system resources on those machines. This is a yaml file and indentation has to be correct."))),(0,o.kt)("p",null,"Update, save and exit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"global:\n  scrape_interval:     15s # By default, scrape targets every 15 seconds.\n\n  # Attach these labels to any time series or alerts when communicating with\n  # external systems (federation, remote storage, Alertmanager).\n  external_labels:\n    monitor: 'codelab-monitor'\n\n# A scrape configuration containing exactly one endpoint to scrape:\n# Here it's Prometheus itself.\nscrape_configs:\n  # The job name is added as a label job=<job_name> to any timeseries scraped from this config.\n  - job_name: 'Prometheus' # To scrape data from the cardano node\n    scrape_interval: 5s\n    static_configs:\n#      - targets: ['<CORE PRIVATE IP>:12798']\n#        labels:\n#          alias: 'C1'\n#          type:  'cardano-node'\n#      - targets: ['<RELAY PRIVATE IP>:12798']\n#        labels:\n#          alias: 'R1'\n#          type:  'cardano-node'\n      - targets: ['localhost:12798']\n        labels:\n          alias: 'R1'\n          type:  'cardano-node'\n\n#      - targets: ['<CORE PRIVATE IP>:9100']\n#        labels:\n#          alias: 'C1'\n#          type:  'node'\n#      - targets: ['<RELAY PRIVATE IP>:9100']\n#        labels:\n#          alias: 'R1'\n#          type:  'node'\n      - targets: ['localhost:9100']\n        labels:\n          alias: 'R1'\n          type:  'node'\n")),(0,o.kt)("p",null,"Reboot the server and give it a while to sync back up. That is just about it. Please feel free to join our Telegram channel for support. ",(0,o.kt)("a",{parentName:"p",href:"https://t.me/armada_alli"},"https://t.me/armada_alli")))}u.isMDXComponent=!0}}]);